---
- name: Harden ssh to pve-hypervisor
  hosts: all

  tasks:
    - name: Setup $USER ssh
      ansible.posix.authorized_key:
        user: "{{ set_username }}"
        state: present
        key: "{{ public_ssh_key }}"

    - name: Ignore authentication settings common to all services (/etc/pam.d/common-auth)
      ansible.builtin.lineinfile:
        dest: /etc/pam.d/sshd
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -t -f %s'
        backup: true
      loop:
        - regexp: "^include common-auth"
          line: "# @include common-auth"

    - name: Enforce tfa with google authenticator tokens if undefined
      ansible.builtin.blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/pam.d/sshd
        content: |
          # Enforce tfa with google authenticator tokens if undefined
          auth required pam_google_authenticator.so

    - name: SSHD (options) 1/2
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -t -f %s'
        backup: true
      loop:
        - regexp: "^PasswordAuthentication yes"
          line: "PasswordAuthentication no"
        - regexp: "^PermitRootLogin"
          line: "PermitRootLogin no"
        - regexp: "^Port 22"
          line: "Port 3022"
        - regexp: "^ChallengeResponseAuthentication no"
          line: "ChallengeResponseAuthentication yes"
        - regexp: "^AddressFamily any"
          line: "AddressFamily inet"
        - regexp: "^LoginGraceTime 2m"
          line: "LoginGraceTime 45s"
        - regexp: "^MaxAuthTries 6"
          line: "MaxAuthTries 3"
        - regexp: "^X11Forwarding yes"
          line: "X11Forwarding no"
      notify: Restart sshd

    - name: Add allowed authentication methods based on groups
      ansible.builtin.blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/ssh/sshd_config
        content: |
          # root user can only use ssh keys to launch automated tasks (like backups & ansible)
          Match User root
            AuthenticationMethods publickey
          # only 'sshauth' group can connect thru ssh w/ valid ssh key and tfa code
          Match Group sshauth
            AuthenticationMethods publickey,keyboard-interactive
          # no other groups are allowed to connect thru ssh
          Match Group *,!sshauth
            AuthenticationMethods none
      notify: Restart sshd

    - name: Create fail2ban config files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "{{ 'directory' if item.mode == '0755' else 'touch' }}"
        mode: "{{ item.mode }}"
        owner: "{{ set_username }}"
        group: "{{ set_username }}"
        recurse: false
        modification_time: preserve
        access_time: preserve
      loop:
        - { mode: '0664', path: /etc/fail2ban/jail.d/01_sshd.conf }
        - { mode: '0664', path: /etc/fail2ban/jail.d/02_proxmox.conf }
        - { mode: '0664', path: /etc/fail2ban/filter.d/proxmox.conf }

    - name: Setup fail2ban sshd jail
      ansible.builtin.blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/fail2ban/jail.d/01_sshd.conf
        content: |
          [sshd]
          enabled = true
          port = 3022
          maxretry = 3
      notify: Restart fail2ban

    - name: Setup fail2ban proxmox jail
      ansible.builtin.blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/fail2ban/jail.d/02_proxmox.conf
        content: |
          [proxmox]
          enabled = true
          port = https,http,8006
          filter = proxmox
          logpath = /var/log/daemon.log
          maxretry = 3
          bantime = 600
      notify: Restart fail2ban

    - name: Setup fail2ban proxmox filter
      ansible.builtin.blockinfile:
        state: present
        insertafter: EOF
        dest: /etc/fail2ban/filter.d/proxmox.conf
        content: |
          [Definition]
          failregex = pvedaemon\[.*authentication (verification )?failure; rhost=<HOST> user=.* msg=.*
          ignoreregex =
      notify: Restart fail2ban

  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
      no_log: "{{ truancated_logs }}"

    - name: Restart fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted
      no_log: "{{ truancated_logs }}"
